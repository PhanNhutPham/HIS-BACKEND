spring:
  application:
    name: doctor-service
  datasource:
    url: jdbc:mysql://localhost:3306/doctor_service
    username: root
    password: root1234
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
  main:
    allow-circular-references: true
  kafka:
    bootstrap-servers: localhost:9193
    consumer:
      group-id: doctor-service-group-v2
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.kafka.consumer.value.deserializer: org.springframework.kafka.core.JsonDeserializer
        spring.kafka.consumer.key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

      listener:
      ack-mode: record   # Hoặc batch nếu bạn muốn batch consume
      type: single       # Hoặc batch nếu batch consume
server:
  port: 5006
  error:
    include-stacktrace: never

#eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:8761/eureka
#
#jwt:
#  expiration: 2592000
#  expiration-refresh-token: 5184000
#  secretkey: TaqlmGv1iEDMRiFp/pHuID1+T84IABfuA0xXh4GhiUI=
#
#api:
#  prefix: /api/v1


logging:
  level:
    org.springframework.web: DEBUG
    com.booking.controller.http.user: DEBUG
    com.booking: DEBUG